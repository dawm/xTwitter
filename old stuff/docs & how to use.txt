	Name: xTwitter for webOS
	Author: Joshua Spohr (dawm) / Biocandy Labs
	Email: josh.spohr@biocandy.com
	Version: 1.0
	
	
	How to use:
	Initial setup is simple, put the following code in your assistant setup(), using the objects below to
	to initialize xTwitter.
	
	-- code --
		appKeys = {
			consumerKey: '',
			consumerSecret: '',
			follow: {
				username: 'biocandy',
				//OR
				userid: '105638521'
			}
		};
		userKeys = {            
				username: '',
				authorized: false,
				token: '',
				secret: ''
		};
	-- code --
	
	A variable named 'Twitter' is already defined at the bottom of this file, but its empty so you will have to assign
	it to our library when you're ready to use it.
	
	-- code --
		if (Twitter.isAuthorized === undefined) {
			// if you store your appKeys or userKeys in a cookie you should load them up now.
			Twitter = new xTwitter(appKeys, userKeys);
		}
	-- code --	
	
	You will want to save 'userKeys' after successfull authorization with twitter (in a cookie or db).
	The object 'appKeys' above is static data about your app, and should be hard coded.
	
	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	!! You must have xAuth access for your twitter application (see http://dev.twitter.com/pages/xauth). !!
	!! If you do not have xAuth access this library will not work properly.                              !!
	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	
	To authorize your app to use a users twitter use the function:
		Twitter.authorize(username,password);
		
		~~ Optionally you can pass a callback function to be called,
		~~ it will return the data required for userKeys on successful authorization
		~~ and will return FALSE on a failure.
		
		Twitter.authorize(username,password,callback);
	
	To send a tweet you use the function:
		Twitter.tweet(message);
	
	To follow a user on twitter use the function:
		Twitter.follow({screen_name: 'twitterUsername'});
		- OR -
		Twitter.follow({user_id: TwitterUserID});
		
	To follow yourself/company (via the data in appKeys) use the function:
		Twitter.followMe();

	To clear all data currently associated with xTwitter use the function:
		Twitter.logout();
		
	
	###############
	# Sample code #      
	###############
	The code below checks to see if the user has been authorized, if they have not authorized
	with your app it sends them to the twitter authorization scene. If they are authorized it
	sends the tweet 'Test.'
	
	-- code --
	    if (Twitter.isAuthorized === false) {
			this.controller.stageController.pushScene('twitter', appKeys);
		}
		else {
			Twitter.tweet('Test.')
		}
	-- code --
	
	Once authorized (or failed authorization) the app pop's back to the previous scene with 
	2 arguments 'from' and 'userKeys'. You will need to catch them in your scene's activate()
	function in order to save them for future use. Below is sample code that does just that.
	
	-- code --
		MySceneAssistant.prototype.activate(event) {
			if (event.from == 'xTwitter') {
				if (event.userKeys != false) {
				   // your save method goes here cookie or database.
				}
			}
		}
	-- code --